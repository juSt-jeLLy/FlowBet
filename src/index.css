@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* BRAINROT CYBERPUNK COLORS - MAX CONTRAST! */
    --background: 220 25% 8%;
    --foreground: 0 0% 98%;

    --card: 220 20% 12%;
    --card-foreground: 0 0% 95%;

    --popover: 220 20% 10%;
    --popover-foreground: 0 0% 98%;

    --primary: 180 100% 60%;
    --primary-foreground: 220 25% 8%;

    --secondary: 270 100% 70%;
    --secondary-foreground: 0 0% 98%;

    --muted: 220 15% 20%;
    --muted-foreground: 0 0% 70%;

    --accent: 330 100% 60%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 85% 65%;
    --destructive-foreground: 0 0% 98%;

    --border: 220 20% 25%;
    --input: 220 20% 15%;
    --ring: 180 100% 60%;

    --radius: 0.75rem;

    /* HYPER NEON CYBERPUNK SYSTEM */
    --neon-cyan: 180 100% 60%;
    --neon-pink: 330 100% 65%;
    --neon-green: 120 100% 60%;  
    --neon-orange: 25 100% 60%;
    --neon-purple: 270 100% 70%;
    --neon-yellow: 55 100% 65%;
    --neon-red: 0 100% 65%;
    --neon-blue: 220 100% 65%;
    
    --dark-bg: 220 25% 8%;
    --dark-card: 220 20% 12%;
    --dark-border: 220 20% 25%;
    
    /* INSANE GRADIENTS */
    --gradient-cyber: linear-gradient(135deg, hsl(var(--neon-cyan)) 0%, hsl(var(--neon-pink)) 50%, hsl(var(--neon-purple)) 100%);
    --gradient-fire: linear-gradient(135deg, hsl(var(--neon-orange)) 0%, hsl(var(--neon-red)) 50%, hsl(var(--neon-pink)) 100%);
    --gradient-matrix: linear-gradient(135deg, hsl(var(--neon-green)) 0%, hsl(var(--neon-cyan)) 100%);
    --gradient-dark: linear-gradient(135deg, hsl(var(--dark-bg)) 0%, hsl(var(--dark-card)) 100%);
    
    /* GLOW EFFECTS */
    --shadow-glow-cyan: 0 0 40px hsl(var(--neon-cyan) / 0.6), 0 0 80px hsl(var(--neon-cyan) / 0.3);
    --shadow-glow-pink: 0 0 40px hsl(var(--neon-pink) / 0.6), 0 0 80px hsl(var(--neon-pink) / 0.3);
    --shadow-glow-green: 0 0 40px hsl(var(--neon-green) / 0.6), 0 0 80px hsl(var(--neon-green) / 0.3);
    --shadow-glow-orange: 0 0 40px hsl(var(--neon-orange) / 0.6), 0 0 80px hsl(var(--neon-orange) / 0.3);
    --shadow-glow-purple: 0 0 40px hsl(var(--neon-purple) / 0.6), 0 0 80px hsl(var(--neon-purple) / 0.3);

    --sidebar-background: 220 25% 10%;
    --sidebar-foreground: 0 0% 95%;
    --sidebar-primary: 180 100% 60%;
    --sidebar-primary-foreground: 220 25% 8%;
    --sidebar-accent: 220 20% 15%;
    --sidebar-accent-foreground: 0 0% 95%;
    --sidebar-border: 220 20% 25%;
    --sidebar-ring: 180 100% 60%;
  }

  .dark {
    /* Already optimized for dark mode above */
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}

/* BRAINROT CYBERPUNK UTILITIES - MAXIMUM CHAOS! */
@layer utilities {
  /* NEON BORDERS WITH ANIMATIONS */
  .neon-border {
    @apply border-2 border-neon-cyan/60 shadow-glow-cyan;
    animation: borderPulse 2s ease-in-out infinite alternate;
  }
  
  .neon-border-pink {
    @apply border-2 border-neon-pink/60 shadow-glow-pink;
    animation: borderPulsePink 2s ease-in-out infinite alternate;
  }

  .neon-border-green {
    @apply border-2 border-neon-green/60 shadow-glow-green;
    animation: borderPulseGreen 2s ease-in-out infinite alternate;
  }

  .neon-border-orange {
    @apply border-2 border-neon-orange/60 shadow-glow-orange;
    animation: borderPulseOrange 2s ease-in-out infinite alternate;
  }
  
  /* BACKGROUND CLASSES */
  .bg-dark-card {
    background: hsl(var(--dark-card));
  }
  
  .bg-gradient-cyber {
    background: var(--gradient-cyber);
  }

  .bg-gradient-fire {
    background: var(--gradient-fire);
  }

  .bg-gradient-matrix {
    background: var(--gradient-matrix);
  }
  
  /* NEON TEXT COLORS */
  .text-neon-cyan {
    color: hsl(var(--neon-cyan));
    text-shadow: 0 0 10px hsl(var(--neon-cyan) / 0.5);
  }
  
  .text-neon-pink {
    color: hsl(var(--neon-pink));
    text-shadow: 0 0 10px hsl(var(--neon-pink) / 0.5);
  }
  
  .text-neon-green {
    color: hsl(var(--neon-green));
    text-shadow: 0 0 10px hsl(var(--neon-green) / 0.5);
  }
  
  .text-neon-orange {
    color: hsl(var(--neon-orange));
    text-shadow: 0 0 10px hsl(var(--neon-orange) / 0.5);
  }

  .text-neon-purple {
    color: hsl(var(--neon-purple));
    text-shadow: 0 0 10px hsl(var(--neon-purple) / 0.5);
  }

  .text-neon-yellow {
    color: hsl(var(--neon-yellow));
    text-shadow: 0 0 10px hsl(var(--neon-yellow) / 0.5);
  }
  
  /* GLOW EFFECTS */
  .shadow-glow-cyan {
    box-shadow: var(--shadow-glow-cyan);
  }
  
  .shadow-glow-pink {
    box-shadow: var(--shadow-glow-pink);
  }

  .shadow-glow-green {
    box-shadow: var(--shadow-glow-green);
  }

  .shadow-glow-orange {
    box-shadow: var(--shadow-glow-orange);
  }

  .shadow-glow-purple {
    box-shadow: var(--shadow-glow-purple);
  }

  /* TEXT EFFECTS */
  .text-glow {
    animation: textGlow 3s ease-in-out infinite alternate;
  }

  .text-flash {
    animation: textFlash 1s ease-in-out infinite;
  }

  .text-rainbow {
    background: linear-gradient(45deg, 
      hsl(var(--neon-red)),
      hsl(var(--neon-orange)),
      hsl(var(--neon-yellow)),
      hsl(var(--neon-green)),
      hsl(var(--neon-cyan)),
      hsl(var(--neon-purple)),
      hsl(var(--neon-pink))
    );
    background-size: 200% 200%;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: rainbowShift 3s ease-in-out infinite;
  }

  /* PULSING EFFECTS */
  .pulse-glow {
    animation: pulseGlow 2s ease-in-out infinite;
  }

  .bounce-glow {
    animation: bounceGlow 2s ease-in-out infinite;
  }

  /* CYBER SHAKE EFFECT */
  .cyber-shake {
    animation: cyberShake 0.1s ease-in-out infinite;
  }

  .cyber-shake:hover {
    animation: cyberShakeIntense 0.1s ease-in-out infinite;
  }

  /* FLOATING ANIMATION */
  .float {
    animation: floating 3s ease-in-out infinite;
  }

  /* SPINNING BORDER */
  .spin-border {
    position: relative;
    background: hsl(var(--dark-card));
  }

  .spin-border::before {
    content: '';
    position: absolute;
    inset: -2px;
    background: conic-gradient(
      hsl(var(--neon-cyan)),
      hsl(var(--neon-pink)),
      hsl(var(--neon-purple)),
      hsl(var(--neon-green)),
      hsl(var(--neon-cyan))
    );
    border-radius: inherit;
    animation: spin 2s linear infinite;
    z-index: -1;
  }

  /* MATRIX RAIN EFFECT */
  .matrix-bg {
    background: 
      radial-gradient(circle at 25% 25%, hsl(var(--neon-green) / 0.1) 0%, transparent 50%),
      radial-gradient(circle at 75% 75%, hsl(var(--neon-cyan) / 0.1) 0%, transparent 50%),
      hsl(var(--dark-bg));
    animation: matrixShift 10s ease-in-out infinite;
  }
}

/* KEYFRAME ANIMATIONS */
@keyframes borderPulse {
  0% { border-color: hsl(var(--neon-cyan) / 0.3); box-shadow: 0 0 20px hsl(var(--neon-cyan) / 0.3); }
  100% { border-color: hsl(var(--neon-cyan) / 0.8); box-shadow: var(--shadow-glow-cyan); }
}

@keyframes borderPulsePink {
  0% { border-color: hsl(var(--neon-pink) / 0.3); box-shadow: 0 0 20px hsl(var(--neon-pink) / 0.3); }
  100% { border-color: hsl(var(--neon-pink) / 0.8); box-shadow: var(--shadow-glow-pink); }
}

@keyframes borderPulseGreen {
  0% { border-color: hsl(var(--neon-green) / 0.3); box-shadow: 0 0 20px hsl(var(--neon-green) / 0.3); }
  100% { border-color: hsl(var(--neon-green) / 0.8); box-shadow: var(--shadow-glow-green); }
}

@keyframes borderPulseOrange {
  0% { border-color: hsl(var(--neon-orange) / 0.3); box-shadow: 0 0 20px hsl(var(--neon-orange) / 0.3); }
  100% { border-color: hsl(var(--neon-orange) / 0.8); box-shadow: var(--shadow-glow-orange); }
}

@keyframes textGlow {
  0% { text-shadow: 0 0 10px hsl(var(--neon-cyan) / 0.5); }
  100% { text-shadow: 0 0 20px hsl(var(--neon-cyan) / 0.8), 0 0 30px hsl(var(--neon-cyan) / 0.5); }
}

@keyframes textFlash {
  0%, 50% { opacity: 1; }
  25%, 75% { opacity: 0.7; }
}

@keyframes rainbowShift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

@keyframes pulseGlow {
  0% { transform: scale(1); box-shadow: 0 0 20px hsl(var(--neon-cyan) / 0.3); }
  50% { transform: scale(1.05); box-shadow: var(--shadow-glow-cyan); }
  100% { transform: scale(1); box-shadow: 0 0 20px hsl(var(--neon-cyan) / 0.3); }
}

@keyframes bounceGlow {
  0%, 20%, 50%, 80%, 100% { transform: translateY(0) scale(1); }
  40% { transform: translateY(-10px) scale(1.05); }
  60% { transform: translateY(-5px) scale(1.02); }
}

@keyframes floating {
  0% { transform: translateY(0px) rotate(0deg); }
  33% { transform: translateY(-10px) rotate(1deg); }
  66% { transform: translateY(5px) rotate(-1deg); }
  100% { transform: translateY(0px) rotate(0deg); }
}

@keyframes matrixShift {
  0%, 100% { background-position: 0% 0%, 100% 100%; }
  50% { background-position: 100% 100%, 0% 0%; }
}

@keyframes cyberShake {
  0%, 100% { transform: translateX(0) translateY(0); }
  25% { transform: translateX(0.5px) translateY(0.5px); }
  50% { transform: translateX(-0.5px) translateY(-0.5px); }
  75% { transform: translateX(0.5px) translateY(-0.5px); }
}

@keyframes cyberShakeIntense {
  0%, 100% { transform: translateX(0) translateY(0) scale(1); }
  25% { transform: translateX(1px) translateY(1px) scale(1.01); }
  50% { transform: translateX(-1px) translateY(-1px) scale(1.01); }
  75% { transform: translateX(1px) translateY(-1px) scale(1.01); }
}